# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

env:  
  S3_BUCKET_NAME: withspace-api-build 
  PROJECT_NAME: withSpace-server
  CODE_DEPLOY_APP_NAME: withspace-api
  CODE_DEPLOY_GROUP_NAME: withspace-api-group
name: deploy

on:
  release:
    types: [push] # (1) push시 자동으로 실행됩니다.
  push:
    branches: [main] # (2) main 브랜치에서 동작합니다.
  workflow_dispatch: # (3) 수동으로도 실행이 가능힙니다.

jobs:
  build:
    runs-on: ubuntu-latest
    permissions: 
      contents: read 
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: 파일들 확인
      run : ls -al
      
    - name: Grant execute permission for gradlew
      run: chmod +x ./withSpace/gradlew
      shell: bash
    
    - name: Build with Gradle
      working-directory: ./withSpace
      run: ./gradlew clean build -x test
      
    - name: Show Current Time
      run: echo "CurrentTime=${{steps.current-time.outputs.formattedTime}}" 
      shell: bash
      
    # Jar 파일 Copy
    - name: Copy Jar
      run: cp ./withSpace/build/libs/*.jar .

    # script file Copy
    - name: Copy shell
      run: cp ./scripts/* .

    - name: Make zip file
      run: zip -r ./$PROJECT_NAME.zip . 
      shell: bash

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./$PROJECT_NAME.zip s3://$S3_BUCKET_NAME/$PROJECT_NAME/$PROJECT_NAME.zip
      
    - name: Code Deploy
      run: aws deploy create-deployment --application-name $CODE_DEPLOY_APP_NAME --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name $CODE_DEPLOY_GROUP_NAME --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$PROJECT_NAME.zip
